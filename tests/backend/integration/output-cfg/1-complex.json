{
   "nodes":[
      {
         "label":1,
         "statements":[
            "input(x1,y1)"
         ]
      },
      {
         "label":2,
         "statements":[
            "input(x2,y2)"
         ]
      },
      {
         "label":3,
         "statements":[
            "P1.x <- x1"
         ]
      },
      {
         "label":4,
         "statements":[
            "P1.y <- y1"
         ]
      },
      {
         "label":5,
         "statements":[
            "P2.x <- x2"
         ]
      },
      {
         "label":6,
         "statements":[
            "P2.y <- y2"
         ]
      },
      {
         "label":7,
         "statements":[
            "output(\"Titik Pertama: \",P1.x,P1.y)"
         ]
      },
      {
         "label":8,
         "statements":[
            "output(\"Titik Kedua: \",P2.x,P2.y)"
         ]
      },
      {
         "label":9,
         "statements":[
            "tukar_bilangan(P1.x,P1.y)"
         ]
      },
      {
         "label":10,
         "statements":[
            "start: procedure tukar_bilangan (input/output x,y: real)"
         ]
      },
      {
         "label":12,
         "statements":[
            "tmp <- x"
         ]
      },
      {
         "label":13,
         "statements":[
            "x <- y"
         ]
      },
      {
         "label":14,
         "statements":[
            "y <- tmp"
         ]
      },
      {
         "label":11,
         "statements":[
            "end: procedure tukar_bilangan (input/output x,y: real)"
         ]
      },
      {
         "label":15,
         "statements":[
            "tukar_bilangan(P2.x,P2.y)"
         ]
      },
      {
         "label":16,
         "statements":[
            "start: procedure tukar_bilangan (input/output x,y: real)"
         ]
      },
      {
         "label":18,
         "statements":[
            "tmp <- x"
         ]
      },
      {
         "label":19,
         "statements":[
            "x <- y"
         ]
      },
      {
         "label":20,
         "statements":[
            "y <- tmp"
         ]
      },
      {
         "label":17,
         "statements":[
            "end: procedure tukar_bilangan (input/output x,y: real)"
         ]
      },
      {
         "label":21,
         "statements":[
            "jarak <- jarak_manhattan(P1,P2)"
         ]
      },
      {
         "label":22,
         "statements":[
            "start: function jarak_manhattan(p1,p2: Point) -> real"
         ]
      },
      {
         "label":24,
         "statements":[
            "jarak <- abs(p1.x - p2.x) + abs(p1.y - p2.y)"
         ]
      },
      {
         "label":25,
         "statements":[
            "->jarak"
         ]
      },
      {
         "label":23,
         "statements":[
            "end: function jarak_manhattan(p1,p2: Point) -> real"
         ]
      },
      {
         "label":26,
         "statements":[
            "tulis(jarak)"
         ]
      },
      {
         "label":27,
         "statements":[
            "start: procedure tulis (input x: real)"
         ]
      },
      {
         "label":29,
         "statements":[
            "y <- x"
         ]
      },
      {
         "label":30,
         "statements":[
            "output(y)"
         ]
      },
      {
         "label":28,
         "statements":[
            "end: procedure tulis (input x: real)"
         ]
      },
      {
         "label":31,
         "statements":[
            "start_algorithm"
         ]
      },
      {
         "label":32,
         "statements":[
            "end_algorithm"
         ]
      }
   ],
   "edges":[
      {
         "start_node_label":1,
         "end_node_label":2
      },
      {
         "start_node_label":2,
         "end_node_label":3
      },
      {
         "start_node_label":3,
         "end_node_label":4
      },
      {
         "start_node_label":4,
         "end_node_label":5
      },
      {
         "start_node_label":5,
         "end_node_label":6
      },
      {
         "start_node_label":6,
         "end_node_label":7
      },
      {
         "start_node_label":7,
         "end_node_label":8
      },
      {
         "start_node_label":8,
         "end_node_label":9
      },
      {
         "start_node_label":9,
         "end_node_label":10
      },
      {
         "start_node_label":9,
         "end_node_label":15
      },
      {
         "start_node_label":10,
         "end_node_label":12
      },
      {
         "start_node_label":12,
         "end_node_label":13
      },
      {
         "start_node_label":13,
         "end_node_label":14
      },
      {
         "start_node_label":14,
         "end_node_label":11
      },
      {
         "start_node_label":11,
         "end_node_label":9
      },
      {
         "start_node_label":15,
         "end_node_label":16
      },
      {
         "start_node_label":15,
         "end_node_label":21
      },
      {
         "start_node_label":16,
         "end_node_label":18
      },
      {
         "start_node_label":18,
         "end_node_label":19
      },
      {
         "start_node_label":19,
         "end_node_label":20
      },
      {
         "start_node_label":20,
         "end_node_label":17
      },
      {
         "start_node_label":17,
         "end_node_label":15
      },
      {
         "start_node_label":21,
         "end_node_label":22
      },
      {
         "start_node_label":21,
         "end_node_label":26
      },
      {
         "start_node_label":22,
         "end_node_label":24
      },
      {
         "start_node_label":24,
         "end_node_label":25
      },
      {
         "start_node_label":25,
         "end_node_label":23
      },
      {
         "start_node_label":23,
         "end_node_label":21
      },
      {
         "start_node_label":26,
         "end_node_label":27
      },
      {
         "start_node_label":26,
         "end_node_label":32
      },
      {
         "start_node_label":27,
         "end_node_label":29
      },
      {
         "start_node_label":29,
         "end_node_label":30
      },
      {
         "start_node_label":30,
         "end_node_label":28
      },
      {
         "start_node_label":28,
         "end_node_label":26
      },
      {
         "start_node_label":31,
         "end_node_label":1
      }
   ]
}